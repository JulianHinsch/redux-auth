{"version":3,"sources":["ui/components/Signup/Signup.module.scss","ui/components/Login/Login.module.scss","ui/components/Header/Header.module.scss","ui/components/Landing/Landing.module.scss","ui/components/Profile/Profile.module.scss","ui/components/Avatar/Avatar.module.scss","ui/components/NotFound/NotFound.module.scss","ui/components/App/App.module.scss","assets/home.svg","assets/logout.svg","redux/actions/auth.actions.js","ui/components/Landing/Landing.js","ui/components/Login/Login.js","ui/components/Login/LoginContainer.js","utils/validators.js","ui/components/Signup/Signup.js","ui/components/Signup/SignupContainer.js","ui/components/Avatar/Avatar.js","ui/components/Profile/Profile.js","ui/components/Profile/ProfileContainer.js","ui/components/NotFound/NotFound.js","ui/components/Routes/Routes.js","ui/components/Header/Header.js","ui/components/Header/HeaderContainer.js","ui/components/App/App.js","ui/components/App/AppContainer.js","serviceWorker.js","redux/reducers/auth.reducer.js","redux/reducers/rootReducer.js","redux/actions/data.actions.js","redux/actions/api.actions.js","history.js","redux/store.js","redux/middleware/feature/auth.middleware.js","redux/middleware/core/api.middleware.js","utils/apiRoot.js","redux/middleware/core/redirect.middleware.js","redux/middleware/core/actionSplitter.middleware.js","index.js"],"names":["module","exports","signup_form","validation_err_msg","message","login_form","header","logo","landing","profile","avatar","not_found","app","__webpack_require__","p","AUTH","LOG_IN","concat","SIGN_UP","LOG_OUT","GET_AUTH","SET_AUTH","setAuth","_ref3","auth","type","payload","meta","feature","Landing","useEffect","document","title","react_default","a","createElement","className","styles","react_router_dom","to","Login","state","email","password","canSubmit","handleSubmit","event","preventDefault","obj","_this$state","_this","redirectTo","props","reduce","xs","x","logIn","handleChange","setState","Object","defineProperty","target","name","value","_this$state2","every","val","this","onSubmit","htmlFor","required","onChange","disabled","Component","connect","ownProps","dispatch","credentials","_ref","actions","validateEmail","userInput","trim","test","validateName","validatePassword","length","toUpperCase","toLowerCase","Signup","firstName","firstNameErrMsg","lastName","lastNameErrMsg","emailErrMsg","passwordErrMsg","signUp","_this$setState","field","getErrMsg","validateForm","validator","validators","keys","key","includes","user","_ref2","Avatar","emailHash","style","backgroundImage","backgroundSize","Profile","components_Avatar_Avatar","NotFound","withRouter","react_router","exact","path","render","isAuthenticated","ProfileContainer","components_Landing_Landing","LoginContainer","location","SignupContainer","component","Header","logOut","src","require","alt","onClick","HeaderContainer","App","getAuth","components_Routes_Routes","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","defaultState","id","auth_reducer","arguments","undefined","action","objectSpread","rootReducer","combineReducers","authReducer","apiRequest","data","method","url","timeout","createBrowserHistory","featureMiddleware","next","jwtPayload","cookies","get","_JSON$parse","JSON","parse","atob","exp","Date","getTime","coreMiddleware","_action$meta","axios","charAt","slice","headers","Content-Type","withCredentials","process","response","apiSuccess","apiError","history","push","Array","isArray","forEach","_action","createLogger","collapsed","store","createStore","applyMiddleware","apply","ReactDOM","es","AppContainer","getElementById","URL","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6fec6295.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_form\":\"Signup_signup_form__2IOMG\",\"validation_err_msg\":\"Signup_validation_err_msg__1HGTU\",\"message\":\"Signup_message__1YubF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_form\":\"Login_login_form__gyF7Q\",\"validation_err_msg\":\"Login_validation_err_msg__2PPAS\",\"message\":\"Login_message__24Ztl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1x3CZ\",\"logo\":\"Header_logo__1o5Ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"Landing_landing__2aCJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1e0S1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__glg4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"not_found\":\"NotFound_not_found__2jb5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__33z-c\"};","module.exports = __webpack_public_path__ + \"static/media/home.9a79fb64.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.ba50176f.svg\";","export const AUTH = '[Auth]';\n\nexport const LOG_IN = `${AUTH} LOG_IN`;\nexport const SIGN_UP = `${AUTH} SIGN_UP`;\nexport const LOG_OUT = `${AUTH} LOG_OUT`;\nexport const GET_AUTH = `${AUTH} GET`;\nexport const SET_AUTH = `${AUTH} SET`;\n\nexport const logIn = ({ credentials, redirectTo }) => ({\n    type: LOG_IN,\n    payload: credentials,\n    meta: {\n        redirectTo\n    }\n});\n\nexport const signUp = ({ user }) => ({\n    type: SIGN_UP,\n    payload: user,\n});\n\nexport const logOut = () => ({\n    type: LOG_OUT,\n});\n\nexport const getAuth = () => ({\n    type: GET_AUTH,\n});\n\nexport const setAuth = ({ auth }) => ({\n    type: SET_AUTH,\n    payload: auth,\n    meta: { \n        feature: AUTH,\n    }\n});","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './Landing.module.scss';\n\nconst Landing = () => {\n\n    useEffect(() => {\n        document.title='Redux Auth';\n    }, []);\n\n    return (\n        <main className={styles.landing}>\n            <h1>Welcome!</h1>\n            <p>Please <Link to='/signup'>sign up</Link> or <Link to='/login'>log in</Link>!</p>\n        </main>\n    )\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Login.module.scss';\n\nexport default class Login extends Component {\n\n    static propTypes = {\n        logIn: PropTypes.func.isRequired,\n        setAuth: PropTypes.func.isRequired,\n        message: PropTypes.string,\n    }\n\n    componentWillMount() {\n        document.title='Log In';\n        this.props.setAuth({ message: null });\n    }\n\n    state = {\n        email: '',\n        password: '',\n        canSubmit: false,\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        //safe getter function, since we don't know if these properties will exist\n        const get = (obj, path) => path.reduce((xs, x) => (xs && xs[x]) ? xs[x] : null, obj);\n        const redirectTo = get(this.props, ['location','state','from','pathname']);\n        this.props.logIn({ email, password }, redirectTo);\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value }, () => {\n            const { email, password } = this.state;\n            this.setState({ canSubmit: [ email, password ].every(val => val !== '') })\n        });\n    }\n\n    render() {\n        return (\n            <main className={styles.login_form}>\n                <h1>Log In</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor='email'>Email</label>\n                        <input name='email' type='text' required onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <label htmlFor='password' required>Password</label>\n                        <input name='password' type='password' onChange={this.handleChange}/>\n                    </div>\n                    <button type='submit' disabled={!this.state.canSubmit}>Log In</button>\n                </form>\n                {this.props.message && (\n                    <div className={styles.message}>\n                        {this.props.message}\n                    </div>\n                )}\n            </main>\n        );\n    }\n}","import { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions/auth.actions';\n\nimport Login from './Login';\n\nconst mapStateToProps = (state, ownProps) => ({\n    message: state.auth.message,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    logIn: (credentials, redirectTo) => dispatch(actions.logIn({ credentials, redirectTo })),\n    setAuth: (auth) => dispatch(actions.setAuth({ auth })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","export const validateEmail = (userInput) => {\n    userInput = userInput.trim();\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;        \n    if(userInput === '') return 'This field cannot be empty';\n    if(!emailRegex.test(userInput)) return 'Please enter a valid email'\n    return '';\n}\n    \nexport const validateName = (userInput) => {\n    userInput = userInput.trim();    \n    const nameRegex = /^[A-Za-z ]+(-[ A-Za-z]+)*$/;\n    if(userInput === '') return 'This field cannot be empty';\n    if(!nameRegex.test(userInput)) return 'Please enter a valid name'\n    return '';\n}\n\nexport const validatePassword = (userInput) => {\n    userInput = userInput.trim();    \n    if(userInput === '') return 'This field cannot be empty';\n    if(/\\s/g.test(userInput)) return 'Password cannot contain spaces';    \n    if(userInput.length < 12) return 'Password must be at least 12 characters';\n    if(userInput.length > 50) return 'Password cannot be greater than 50 characters';\n    if(userInput.toUpperCase() === userInput) return 'Password must contain a lowercase character';\n    if(userInput.toLowerCase() === userInput) return 'Password must contain an uppercase character';\n    if(!/\\d/.test(userInput)) return 'Password must contain a number';\n    if(!/[-!$%^&*()_+|~=`{}[\\]:\";'<>?,./]/.test(userInput)) return 'Password must contain a special character';\n    return '';\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as validators from '../../../utils/validators';\n\nimport styles from './Signup.module.scss';\n\nclass Signup extends Component {\n\n    static propTypes = {\n        signUp: PropTypes.func.isRequired,\n        setAuth: PropTypes.func.isRequired,\n        message: PropTypes.string,\n    }\n\n    componentWillMount() {\n        document.title='Sign Up';\n        this.props.setAuth({ message: null });        \n    }\n    \n    state = {\n        firstName: '',\n        firstNameErrMsg: '',\n        lastName: '',\n        lastNameErrMsg: '',\n        email: '',\n        emailErrMsg: '',\n        password: '',\n        passwordErrMsg: '',\n        canSubmit: false,\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { firstName, lastName, email, password } = this.state;\n        this.props.signUp({\n            name: `${firstName} ${lastName}`,\n            email,\n            password\n        });\n    }\n\n    handleChange = (event) => {\n        const field = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [field]: value,\n            [`${field}ErrMsg`]: this.getErrMsg(field, value),\n        }, () => {  \n            this.setState({ canSubmit: this.validateForm() });\n        });\n    }\n\n    getErrMsg = (field, userInput) => {\n        const validatorMap = {\n            email: validators.validateEmail,\n            firstName: validators.validateName,\n            lastName: validators.validateName,\n            password: validators.validatePassword,\n        }\n        const validator = validatorMap[field];\n        if(validator) {\n            return validator(userInput);\n        }\n        return '';\n    }\n\n    validateForm = () => {\n        return Object.keys(this.state).every(key => {\n            //check all error messages are empty and all fields are not empty\n            return key.includes('ErrMsg') ? this.state[key] === '' : this.state[key] !== '';\n        })\n    }\n\n    render() {\n        return (\n            <main className={styles.signup_form}>\n                <h1>Sign Up</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor='firstName'>First Name</label>\n                        <input name='firstName' type='text' required onChange={this.handleChange}/>\n                        <span className={styles.validation_err_msg}>\n                            {this.state.firstNameErrMsg}\n                        </span>\n                    </div>\n                    <div>\n                        <label htmlFor='lastName'>Last Name</label>\n                        <input name='lastName' type='text' required onChange={this.handleChange}/>\n                        <span className={styles.validation_err_msg}>\n                            {this.state.lastNameErrMsg}\n                        </span>\n                    </div>\n                    <div>\n                        <label htmlFor='email'>Email</label>\n                        <input name='email' type='email' required onChange={this.handleChange}/>\n                        <span className={styles.validation_err_msg}>\n                            {this.state.emailErrMsg}\n                        </span>\n                    </div>\n                    <div>\n                        <label htmlFor='password'>Password</label>\n                        <input name='password' type='password' required onChange={this.handleChange}/>\n                        <span className={styles.validation_err_msg}>\n                            {this.state.passwordErrMsg}\n                        </span>\n                    </div>\n                    <button type='submit' disabled={!this.state.canSubmit}>Sign Up</button>\n                </form>\n                {this.props.message && (\n                    <div className={styles.message}>\n                        {this.props.message}\n                    </div>\n                )}\n            </main>\n        )\n    }\n}\n\nexport default Signup;","import { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions/auth.actions';\n\nimport Signup from './Signup';\n\nconst mapStateToProps = (state, ownProps) => ({\n    message: state.auth.message,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    signUp: (user) => dispatch(actions.signUp({ user })),\n    setAuth: (auth) => dispatch(actions.setAuth({ auth })),    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Avatar.module.scss';\n\nconst Avatar = ({ emailHash }) => (\n     <div \n        style={{\n            backgroundImage: `url(https://www.gravatar.com/avatar/${emailHash})`,\n            backgroundSize: 'cover',        \n        }}\n        className={styles.avatar}/>\n)\n\nAvatar.propTypes = {\n    emailHash: PropTypes.string.isRequired,\n}\n\nexport default Avatar;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.scss';\nimport Avatar from '../Avatar/Avatar';\n\nconst Profile = ({ auth }) => {\n\n    useEffect(() => {\n        document.title=`Redux Auth | ${auth.name}`;\n    });\n\n    return (\n        <main className={styles.profile}>\n            <Avatar emailHash={auth.emailHash}/>\n            <h1>{auth.name}</h1>\n        </main>\n    )\n}\n\nProfile.propTypes = {\n    auth: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        emailHash: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default Profile;\n","import { connect } from 'react-redux';\nimport Profile from './Profile';\n\nconst mapStateToProps = (state, ownProps) => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, null)(Profile);","import React from 'react';\n\nimport styles from './NotFound.module.scss';\n\nconst NotFound = () => {\n    return (\n        <main className={styles.not_found}>\n            <h1>404!</h1>\n            <p>The page you're looking for can't be found.</p>\n        </main>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Landing from '../Landing/Landing';\nimport Login from '../Login/LoginContainer';\nimport Signup from '../Signup/SignupContainer';\nimport Profile from '../Profile/ProfileContainer';\nimport NotFound from '../NotFound/NotFound';\n\nconst Routes = (props) => {\n    const { auth } = props;\n    /* using render props for stateful components\n        because of https://github.com/ReactTraining/react-router/issues/6471 */\n    return (\n        <Switch>\n            <Route exact path='/' render={() => auth.isAuthenticated ? <Profile/> : <Landing/>}/>\n            <Route path='/login' render={(props) => <Login location={props.location}/>}/>\n            <Route path='/signup' render={() => <Signup/>}/>\n            <Route component={NotFound}/>\n        </Switch>\n    )\n}\n\nRoutes.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nexport default withRouter(connect((state, ownProps) => ({ auth: state.auth}), null)(Routes));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Header.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ auth, logOut }) => (\n    <header className={styles.header}>\n        <nav>\n            <Link to='/' className={styles.logo} title='Home'>\n                <img \n                    src={require('../../../assets/home.svg')} \n                    alt='Home'/>\n            </Link>\n            {auth.isAuthenticated ? (\n                <ul>\n                    <li> \n                        <img \n                            onClick={logOut} \n                            src={require('../../../assets/logout.svg')} \n                            alt='Log Out' \n                            title='Log Out'/>\n                    </li>\n                </ul>   \n            ) : (\n                <ul>\n                    <li><Link to='/signup'>Sign Up</Link></li>\n                    <li><Link to='/login'>Log In</Link></li>\n                </ul>\n            )}\n        </nav>\n    </header>\n)\n\nHeader.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logOut: PropTypes.func.isRequired,\n}\n\nexport default Header;","import { connect } from 'react-redux';\nimport * as actions from '../../../redux/actions/auth.actions';\n\nimport Header from './Header';\n\nconst mapStateToProps = (state, ownProps) => ({\n    auth: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    logOut: () =>  dispatch(actions.logOut()),\n});\n\nexport const HeaderContainer = connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Routes from '../Routes/Routes';\n\nimport { HeaderContainer as Header } from '../Header/HeaderContainer';\n\nimport '../../styles/global.scss';\nimport styles from './App.module.scss';\n\nclass App extends Component {\n\n    static propTypes = {\n        getAuth: PropTypes.func.isRequired,\n    }\n\n    componentWillMount() {\n        this.props.getAuth();\n    }\n\n    render() {\n        return (\n            <div className={styles.app}>\n                 <Header/>\n                 <Routes/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../../../redux/actions/auth.actions';\n\nimport App from './App';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    getAuth: () => dispatch(actions.getAuth()),\n});\n\nexport default withRouter(connect(null, mapDispatchToProps, null)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_AUTH } from '../actions/auth.actions';\n\nconst defaultState = {\n    id: null,\n    isAuthenticated: false,\n    name: null,\n    emailHash: null,\n    message: null,\n};\n\nexport default (state = defaultState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            const auth = action.payload;\n            return { ...state, ...auth };            \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { CLEAR_STORE } from '../actions/data.actions';\n\nimport authReducer from './auth.reducer';\n\nconst rootReducer = (state, action) => {\n\n    if (action.type === CLEAR_STORE) {\n        state = undefined;\n    }\n\n    return combineReducers({\n        auth: authReducer,\n    })(state, action);\n}\n\nexport default rootReducer;","export const CLEAR_STORE = 'CLEAR_STORE';\n\nexport const clearStore = () => ({\n    type: CLEAR_STORE,\n});","export const API_REQUEST = 'API_REQUEST';\nexport const API_SUCCESS = 'API_SUCCESS';\nexport const API_ERROR   = 'API_ERROR';\n\nexport const apiRequest = ({ data, method, url, timeout, feature, redirectTo }) => ({\n    type: `${feature} ${API_REQUEST}`,\n    payload: data,\n    meta: { method, url, timeout, feature, redirectTo }\n});\n\nexport const apiSuccess = ({ response, feature, redirectTo }) => ({\n    type: `${feature} ${API_SUCCESS}`,\n    payload: response,\n    meta: { feature, redirectTo }\n});\n\nexport const apiError = ({ error, feature }) => ({\n    type: `${feature} ${API_ERROR}`,\n    payload: error,\n    meta: { feature }\n});","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer.js';\nimport { createLogger } from 'redux-logger';\n\nimport authMiddleware from './middleware/feature/auth.middleware';\n\nimport actionSplitterMiddleware from './middleware/core/actionSplitter.middleware';\nimport apiMiddleware from './middleware/core/api.middleware';\nimport redirectMiddleware from './middleware/core/redirect.middleware';\n\nconst featureMiddleware = [\n    authMiddleware,\n]\n\nconst coreMiddleware = [\n    apiMiddleware,\n    redirectMiddleware,\n    actionSplitterMiddleware, //this should really be first core but it throws errors  \n    createLogger({ collapsed: true }),\n]\n\nexport default () => {\n    return createStore(rootReducer, applyMiddleware(...featureMiddleware, ...coreMiddleware));\n}\n","import cookies from 'js-cookie';\nimport { AUTH, LOG_IN, SIGN_UP, LOG_OUT, GET_AUTH, setAuth } from '../../actions/auth.actions';\nimport { API_SUCCESS, API_ERROR, apiRequest } from '../../actions/api.actions';\nimport { clearStore } from '../../actions/data.actions';\n\nexport default ({ dispatch }) => (next) => (action) => {\n    \n    next(action);\n\n    switch(action.type) {\n        case LOG_IN:\n            const credentials = action.payload;\n            const { redirectTo } = action.meta;\n            next(apiRequest({\n                data: credentials, \n                method: 'POST',\n                url: '/login',\n                timeout: 3000,\n                feature: AUTH,\n                redirectTo\n            }));\n            break;\n        case SIGN_UP:\n            const user = action.payload;\n            next(apiRequest({ \n                    data: user, \n                    method: 'POST', \n                    url: '/signup', \n                    timeout: 3000,\n                    feature: AUTH,\n                    redirectTo: null,                    \n            }));\n            break;\n        case LOG_OUT:\n            next(apiRequest({ \n                    data: null, \n                    method: 'POST',\n                    url: '/logout', \n                    timeout: 3000,\n                    feature: AUTH,\n                    redirectTo: null,                    \n            }));\n            break;\n        case `${AUTH} ${API_ERROR}`:\n            //safe getter function, since we can't be sure these properties will exist\n            const safeGet = (obj, path) => path.reduce((xs, x) => (xs && xs[x]) ? xs[x] : null, obj);\n            const message = safeGet(action, ['payload','response', 'data', 'message']);   \n            next(setAuth({ auth: { message }}));\n            break;\n        case `${AUTH} ${API_SUCCESS}`:\n        case GET_AUTH:\n            //read the cookie\n            const jwtPayload = cookies.get('jwt_payload');        \n            if(jwtPayload) {\n                const { id, name, emailHash, exp } = JSON.parse(window.atob(jwtPayload));\n                //exp is in seconds not milliseconds\n                if(exp*1000 > new Date().getTime()) {\n                    const auth = {\n                        id,\n                        name,\n                        emailHash,\n                        isAuthenticated: true,\n                        message: null,\n                    }\n                    next(setAuth({ auth }));\n                    break;\n                }\n            }\n            //clear the store when the user logs out\n            next(clearStore());            \n            break;\n        default:\n            break;\n    }\n}\n    ","import { API_REQUEST, apiError, apiSuccess } from \"../../actions/api.actions\";\nimport { API_ROOT } from '../../../utils/apiRoot';\nimport axios from 'axios';\n\nexport default ({ dispatch }) => (next) => (action) => {\n\n    next(action);\n\n    if (action.type.includes(API_REQUEST)) {\n        \n        const { url, method, timeout, feature, redirectTo } = action.meta;\n        const data = action.payload;\n\n        axios(`${API_ROOT}/${url.charAt(0) === '/' ? url.slice(1) : url}`, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            withCredentials: process.env.NODE_ENV === 'development',\n            timeout,            \n            data,\n        })\n        .then(response => dispatch(apiSuccess({ response: response.data, feature, redirectTo })))\n        .catch(error => dispatch(apiError({ error, feature })))\n    }\n};","export const API_ROOT = process.env.NODE_ENV === 'development' ? 'http://localhost:3001' : '';","import { AUTH } from '../../actions/auth.actions';\nimport { API_SUCCESS } from '../../actions/api.actions';\nimport { CLEAR_STORE } from '../../actions/data.actions';\nimport history from '../../../history';\n\nexport default ({ dispatch }) => (next) => (action) => {\n     \n    next(action);\n\n    switch(action.type) {\n        case `${AUTH} ${API_SUCCESS}`:\n            history.push(action.meta.redirectTo || '/');\n            break;\n        case CLEAR_STORE:\n            history.push('/');\n            break;\n        default:\n            break;\n    }\n}","/**\n * This makes it possible to dispatch an array of actions i.e.\n * next([\n *      createAction1(data)\n *      createAction2(data)\n * ])\n */\nexport default ({ dispatch }) => (next) => (action) => {\n    if(Array.isArray(action)) {\n        action.forEach(_action => next(_action))\n    } else {\n        next(action);\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './ui/components/App/AppContainer';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './redux/store';\nimport { Router } from 'react-router-dom';\nimport history from './history';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\nserviceWorker.register();"],"sourceRoot":""}